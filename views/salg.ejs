<!DOCTYPE html>
<html lang="no">
<head>
  <meta charset="UTF-8">
  <title>Registrer Handel</title>
  <link rel="stylesheet" href="/styles/index.css">
  <link rel="stylesheet" href="/styles/salg.css">
  <link rel="stylesheet" href="/styles/menyPanel.css">
</head>
<body>
  <%- include('partials/menyPanel') %>

  <main class="formContainer"> 
    <h1>REGISTRER SALG</h1>

    <form id="handelForm">
      <div class="form-group">
        <label for="aksjeListe">Velg en aksje:</label>
        <select id="aksjeListe" name="aksje" required>
        <option value="">Velg en aksje</option>
        </select>
      </div>

      <div id="aksjeInfo" style="display: none;">
        <h2 id="aksjeNavn">Informasjon om aksjen</h2>
        <p>Du har: <span id="aksjePris"></span> Aksjer</p>
      </div>

      <div class="form-group">
        <label for="mengde">Salgs beløpet:</label>
        <input type="number" id="mengde" name="mengde" required>
      </div>

      <div class="form-group">
        <p>Transaksjonskostnad: 0,05% av salgs beløpet </p>
      </div>

      <button type="submit">Bekreft salg</button>
    </form>
  </main>

  <script>
    const portefoljeID = parseInt(localStorage.getItem('aktivPortefoljeID'));

    const registrerHandelKnapp = document.querySelector('button[type="submit"]')

    
      const aksjeInfo = document.getElementById('aksjeInfo');
      const aksjeNavn = document.getElementById('aksjeNavn');
      const aksjePris = document.getElementById('aksjePris');
      const aksjeInput = document.getElementById('aksjeListe');
      let aksjeData = null;

    fetch(`/api/konto-status/${portefoljeID}`)
      .then(res => res.json())
      .then(data =>{
        console.log("lukkedatoK fra server:", data);

        // Hvis portoføljen er lukket, så skal det ikke være mulig å foreta en transaksjon
        if(data.lukkedatoK){
          registrerHandelKnapp.disabled = true;
          registrerHandelKnapp.textContent = "Det er ikke mulig å foreta en transaksjon, når kontoen er lukket."
        }
        else{
          registrerHandelKnapp.disabled = false;
          registrerHandelKnapp.textContent = "Registrer Salg";
        }
      })
      .catch(err => {
        console.log("Klarte ikke hente kontostatus", err);
      });


      // For å hente aksjene som brueren eier
      fetch('/aksjeienkeltportefolje', {
        method: 'POST', 
        headers: {'Content-type': 'application/json'},
        body: JSON.stringify({portefoljeID})
      })

      .then(res => res.json())
      .then(aksjer => {
        aksjer.forEach(aksje => {
            const option = document.createElement('option');
            option.value = aksje.navn;
            option.textContent = aksje.navn;
            aksjeInput.appendChild(option);
        });
      })
      .catch(error => {
        console.error('feil ved henting av de aksjene brukeren eier', error);
      });

      aksjeInput.addEventListener('change', () => {
        const navn = aksjeInput.value;
        if(navn === ''){
            return
        }

    
      fetch(`/api/aksje/${navn}`) 
        .then(res => res.json()) 
        .then(data => {
          aksjeData = data; 
          aksjeNavn.textContent = data.shortName;  
          aksjePris.textContent = data.regularMarketPrice; 
          aksjeInfo.style.display = 'block'; 
        })
        .catch(err => { 
          console.error(err); 
          alert("Fant ikke aksjen. Sjekk navnet."); 
        });
    });
    document.getElementById('handelForm').addEventListener('submit', (handel) => {
      handel.preventDefault();

      if(!aksjeData || !aksjeData.symbol) {
        console.error("aksjedataen er ugyldig", aksjeData);
        alert("du må velge en aksje du eier for å kunne registrere salget");
        return;
      }

      const mengde = parseFloat(document.getElementById('mengde').value);
      const totalSum = aksjeData.regularMarketPrice * mengde;
      const gebyr = parseFloat((totalSum * 0.0005).toFixed(2));
      const dato = new Date().toISOString().split('T')[0];
      const pris = aksjeData.regularMarketPrice;

      if(isNaN(mengde) || mengde <= 0){
        alert("du må skrive inn et gyldig antall aksjer");
        return;
      }


     


      fetch('/salg', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
            portefoljeID,
            ISIN: aksjeData.symbol, //bruker aksjedatasymbol som isin fordi yahoo ikke har isin
            verditype: 'Aksje salg',
            opprettelsedatoT: dato,
            verdiPapirPris: pris,
            mengde,
            totalSum,
            totalGebyr: gebyr
        })
      })
      .then(async res => {
        try{
        const data = await res.json();
        if (!res.ok) {
            console.error('feil med serveren', data);
            throw new Error(data.message);
        }
        alert("salget ble registrert!");
        window.location.href = '/enkeltportefolje';
      } catch(err) {
        console.error('feil når responsen skla behandles', err);
        alert("kan ikke lese svaret fra serveren" );
        }
      })
        .catch(err => {
            console.error('feil med fetchingen av salget', err);
            alert("Feil ved salg: " + err.message);
      });
    });
  </script>
</body>
</html>