<!DOCTYPE html>
<html lang="no">
<head>
  <meta charset="UTF-8">
  <title>Registrer Handel</title>
  <link rel="stylesheet" href="/styles/index.css">
  <link rel="stylesheet" href="/styles/salg.css">
  <link rel="stylesheet" href="/styles/menyPanel.css">
</head>
<body>
  <%- include('partials/menyPanel') %>

  <main class="formContainer"> 
    <h1>REGISTRER SALG</h1>

    <form id="handelForm">
      <div class="form-group">
        <label for="aksjeListe">Velg en aksje:</label>
        <select id="aksjeListe" name="aksje" required>
        <option value="">Velg en aksje</option>
        </select>
      </div>

      <div id="aksjeInfo" style="display: none;">
        <h2 id="aksjeNavn">Informasjon om aksjen</h2>
        <p>Du har: <span id="aksjeBeholdning"></span> Aksjer</p>
        <p>Markedspris nå: <span id="aksjePris"></span></p>
      </div>

      <div class="form-group">
        <label for="mengde">Velg antall aksjer du vil selge</label>
        <input type="number" id="mengde" name="mengde" required>
      </div>

      <div class="form-group">
        <p>Transaksjonskostnad: 0,05% av salgs beløpet </p>
      </div>

      <button type="submit">Bekreft salg</button>
    </form>
  </main>

  <script>
    //henter porteføljeID som ble valgt tidligere fra localStorage
    const portefoljeID = parseInt(localStorage.getItem('aktivPortefoljeID'));

    //referanser til de ulike HTML elementene
    const registrerHandelKnapp = document.querySelector('button[type="submit"]')
    const aksjeInfo = document.getElementById('aksjeInfo');
    const aksjeNavn = document.getElementById('aksjeNavn');
    const aksjePris = document.getElementById('aksjePris');
    const aksjeInput = document.getElementById('aksjeListe');
    const aksjeBeholdning = document.getElementById('aksjeBeholdning');
    let aksjeData = null; //kal holde aksjedataen som hentes senere

    //henter status på kontoen om den er lukket
    fetch(`/api/konto-status/${portefoljeID}`)
      .then(res => res.json())
      .then(data =>{
        console.log('lukkedatoK fra server', data);
        // Hvis portoføljen er lukket, så skal det ikke være mulig å foreta en transaksjon
        if(data.lukkedatoK){
          registrerHandelKnapp.disabled = true;
          registrerHandelKnapp.textContent = 'Det er ikke mulig å foreta en transaksjon, når kontoen er lukket.'
        } else {
          registrerHandelKnapp.disabled = false;
          registrerHandelKnapp.textContent = 'Bekrefter salg';
          }
        })
      .catch(err => {
        console.log('Klarte ikke hente kontostatus', err);
    });
     // For å hente aksjene som brueren eier
    fetch('/aksjeienkeltportefolje', {
        method: 'POST', 
        headers: {'Content-type': 'application/json'},
        body: JSON.stringify({portefoljeID})
      })

      .then(res => res.json())
      .then(aksjer => {
        //fyller listen med aksjer
        aksjer.forEach(aksje => {
            const option = document.createElement('option');
            option.value = aksje.navn;
            option.textContent = aksje.navn;
            aksjeInput.appendChild(option);
          })
        });

        aksjeInput.addEventListener('change', () =>{
          const navn = aksjeInput.value;
          if (!navn) return;
    
      //henter markedsinfor for aksjene
      fetch(`/api/aksje/${navn}`) 
        .then(res => res.json()) 
        .then(data => {
          aksjeData = data; //lagrer dataen globalt
          aksjeNavn.textContent = data.shortName;  
          aksjePris.textContent = `${data.regularMarketPrice} ${data.currency}`; 
        
        //henter akjsebeholdningen igjen for å kunne se hvor mange aksjer brukeren har
        fetch('/aksjeienkeltportefolje', {
          method: 'POST',
          headers: {'Content-type': 'application/json'},
          body: JSON.stringify({portefoljeID})
        })
        .then(res => res.json())
        .then(aksjer => {
          const valgt = aksjer.find(a => a.navn === navn);

          if (valgt){
            aksjeBeholdning.textContent = valgt.antall;
          } else {
            aksjeBeholdning.textContent = 0;
          }
          aksjeInfo.style.display = 'block'; //vis info boksen
        });
      })
      .catch(err => {
          console.log('Klarte ikke hente aksjeinfo');
      });
  });

    document.getElementById('handelForm').addEventListener('submit', (handel) => {
      handel.preventDefault(); //forhindrer standar skjemainsendig fra å skje

      if(!aksjeData || !aksjeData.symbol) {
        console.error('aksjedataen er ugyldig', aksjeData);
        alert('du må velge en aksje du eier for å kunne registrere salget');
        return;
      }

      const mengde = parseFloat(document.getElementById('mengde').value);
      const dato = new Date().toISOString().split('T')[0];
      const pris = aksjeData.regularMarketPrice;

      if(isNaN(mengde) || mengde <= 0){
        alert('du må skrive inn et gyldig antall aksjer');
        return;
      }

      //sender en POST Request til backend for å registrere selve salget
      fetch('/salg', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
            portefoljeID,
            ISIN: aksjeData.symbol, //bruker aksjedatasymbol som isin fordi yahoo ikke har isin
            verditype: 'salg',
            opprettelsedatoT: dato,
            verdiPapirPris: pris,
            mengde,
        })
      })
      .then(async res =>{
      if (!res.ok){
        const error = await res.json();
        throw new Error(error.message);
      }
      alert('Salget ble gjennomført')
      window.location.href = '/enkeltportefolje'; //navigeres tilbake til portefølje
    })
      .catch(feil =>{
        console.log('feil under salget');
        alert('Du prøvde å selge flere aksjer enn du har i beholdningen');
      })
    });
  </script>
</body>
</html>